#include <iostream>
#include <iomanip>
#include <limits>

using namespace std;

int main()
{
	/* Упражнение 1
	* Дано целое трехзначное число. Найдите сумму его цифр.
	* Тестовые данные			Ожидаемый результат
	* 111						3
	* 999						27
	* 123						6
	* 321						6
	* 528						15
	*/
	int chislo, dec, one, hund, sum;
	cout << "chislo = ";
	cin >> chislo;
	one = chislo % 10;
	dec = (chislo / 10) % 10;
	hund = chislo / 100;
	sum = one + dec + hund;
	cout << "sum = " << sum << endl;
	

	/*
	* Упражнение 2
	* Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени.
	* Известно, что второй момент времени наступил не раньше первого.
	* Определите, сколько секунд прошло между двумя моментами времени.
	* Тестовые данные			Ожидаемый резульат
	* 1 1 1 2 2 2				3661
	* 2 20 20 3 20 20			3600
	* 23 30 00 23 59 59			1799
	*/	
	int hour, min, sec, hour2, min2, sec2, delta, sum_sec, sum_sec2;
	cout << "hour = ";
	cin >> hour;
	cout << "min = ";
	cin >> min;
	cout << "sec = ";
	cin >> sec;
	cout << "hour2 = ";
	cin >> hour2;
	cout << "min2 = ";
	cin >> min2;
	cout << "sec2 = ";
	cin >> sec2;
	sum_sec = (hour * 60 * 60) + (min * 60) + sec;
	sum_sec2 = (hour2 * 60 * 60) + (min2 * 60) + sec2;
	delta = sum_sec2 - sum_sec;
	cout << "delta = " << delta << endl;
	

	/* Упражнение 3
	Посчитать Юлианскую дату
	Пользователь вводит дату в формате день, месяц, год
	Вывести в консоль рассчитанную Юлианскую дату
	https://ru.wikipedia.org/wiki/%D0%AE%D0%BB%D0%B8%D0%B0%D0%BD%D1%81%D0%BA%D0%B0%D1%8F_%D0%B4%D0%B0%D1%82%D0%B0
	раздел "Вычисление номера юлианского дня (JDN) по дате григорианского календаря"
	Тестовые данные				Ожидаемый результат
	1 12 2018					    2458454
	1 1 2018					    2458120
	1 6 2000					    2451697
	21 12 2012					  2456283
	*/
	int day, month, year, a, m, y, JND;
	cout << "day = ";
	cin >> day;
	cout << "month = ";
	cin >> month;
	cout << "year = ";
	cin >> year;
	a = ((14 - month) / 12);
	y = year + 4800 - a;
	m = month + 12 * a - 3;
	JND = day + ((153 * m + 2)/5) + (365 * y)
		+ (y/4) - (y/100) + (y/400) - 32015;
	cout << "JND = " << JND;
	

	/* Упражнение 4
	* Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59),
	* то есть сначала записывается количество часов, потом обязательно двузначное количество минут,
	* затем обязательно двузначное количество секунд.
	* Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
	* Тестовые данные		Ожидаемый результат
	* 10					      0:00:10
	* 122					      0:02:02
	* 1220					    0:20:20
	* 12200					    3:23:20
	* 86000					    23:53:20
	*/
	int h, mm, ss;
	cin >> ss;
	h = ss / 3600;
	ss -= (h * 3600);
	mm =  (sec / 60);
	ss -= mm * 60;
	cout << h << ":" << mm / 10 << mm % 10 <<
		":" << ss / 10 << ss % 10 << endl;


	/* Упражнение 5
	* На вход дается натуральное число N. Выведите следующее за ним четное число
	* Тестовые данные		Ожидаемый результат
	* 5						6
	* 6						8
	* 0						2
	* 111					112
	* 112					114
	*/
	int N;
	cin >> N;
	cout << N + (N % 2) + ((N % 2 - 1) * (-2)) << endl;
	

	/* Упражнение 6
	* Дано четырехзначное число. Определите, является ли его десятичная запись симметричной.
	* Если число симметричное, то выведите 1, иначе выведите любое другое целое число.
	* Число может иметь меньше четырех знаков, тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
	* Тестовые данные			Ожидаемый результат
	* 2002						1
	* 2018						не 1
	* 42						  не 1
	* 220						не 1
	* 9999						1
	*/
	int chisl, d1, d2;
	cin >> chisl;
	d1 = chisl / 100;
	d2 = ((chisl % 10) * 10) + (chisl / 100 % 10);
	cout << d2 - d1 + 1 << endl;

	/* Дополнительное упражнение (будет оцениваться отдельно)
	* Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров.
	* На какой день улитка доползет до вершины шеста?
	* Тестовые данные		Ожидаемый результат
	*  H	A	B
	* 10	3	2			8
	* 11	4	2			5
	* 80	7	3			20
	*/

	/*int H, A, B, days;
	cout << "H = ";
	cin >> H;
	cout << "A = ";
	cin >> A;
	cout << "B = ";
	cin >> B;
	days = (H - B*(B - A)) / (A - B);
	cout << days;*/
}
