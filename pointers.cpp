#include <iostream>
#include <string>
#include "Extention.hpp"

using namespace std;
using namespace ext;

const int MAX_INPUT_SIZE = 256;

int main()
{
	setlocale(LC_ALL, "rus");
	cout << "Задание №1" << endl;
	int val = 10;
	//выведите адрес переменной val
	cout << &val << endl;
	//создайте указатель для хранения адреса переменной val
	//сохраните адрес переменной val в созданный указатель
	int * ptr = &val;
	//выведите значение переменной val, используя указатель
	cout << *ptr << endl;

	//Пусть объявлены следующие переменные:
	unsigned int a = 5U;
	double b = 0.8;
	float f = 0.5F;
	long long ll = 123LL;
	//Объявите и проинициализируйте указатели на вышеобъявленные переменные.
	unsigned int * ptr1 = &a;
	double * ptr2 = &b;
	float * ptr3 = &f;
	long long * ptr4 = &ll;
	//Какой размер имеют объявленные указатели? Проверьте с помощью оператора sizeof
	cout << sizeof(ptr1) << endl;
	cout << sizeof(ptr2) << endl;
	cout << sizeof(ptr3) << endl;
	cout << sizeof(ptr4) << endl;
	//С помощью объявленных указателей:
	//увеличьте значение переменной a на 1
	//присвойте переменной b значение 0.25
	//увеличьте значение переменной f в два раза
	//посчитайте остаток от деления на 10 переменной ll
	a = *ptr1 + 1;
	b = *ptr2 * 0.3125;
	f = *ptr3 * 2;
	cout << *ptr4 % 10 << endl;
	cout << endl;
	//Объявите указатель на тип int -- int * ptr;
	//Объявите указатель на константу типа short -- const short * ptr;


	cout << "Задание №2" << endl;
	//Что выведет на экран следующий код ? -1
	//Прокоментируйте каждую строку, запишите промежуточные значения переменных.

	int t[4] = { 8,4,2,1 }; //Объявление и инициализация массива t
	int *p1 = t + 2, *p2 = p1 - 1; //объявление и инциализация указателей p1 (адрес третьего элемента массива) и p2 (адрес второго элемента массива)
	p1++; //p1 -- адрес четвертого элемента массива
	cout << *p1 - t[p1 - p2] << endl; //последний элемент массива минус третий элемент массива (1 - 2)
		
	/*Объявите указатель на первый элемент массива
	С помощью цикла for и объвленного указателя выведите каждый элемент массива в консоль.
	С помощью цикла for и объвленного указателя увеличьте каждый элемент массива в 2 раза
	и посчитайте сумму получившихся элементов массива.
	Выведите полученный результат.*/
	int data[] = { 1,2,3,4,5 }, summ = 0;
	int * dat = data;
	for (int i = 0; i < 5; i++)
	{
		cout << *(dat + i) << " ";
	}
	cout << endl;
	for (int i = 0; i < 5; i++)
	{
		*(dat + i) *= 2;
		cout << *(dat + i) << " ";
	}
	cout << endl;
	for (int i = 0; i < 5; i++) summ = *(dat + i) + summ;
	cout << summ;
	cout << endl;
	cout << endl;

	cout << "Заданиe №3" << endl;
	/*1.	Сгенерировать массив из 20 рандомных элементов из диапазона[-100, 100].
	2.	Объявите указатель на первый элемент массива.
	3.	С помощью цикла for и объявленного указателя выведите массив в консоль.
	4.	Используя дополнительный указатель найдите максимальный элемент массива.
	5.	Выведите его индекс и значение. (Для вывода индекса использовать арифметику указателей).
	При обходе массива использовать указатели, запрещено обращаться к элементам массива по индексам.*/
	int mass[20];
	for (int i = 0; i < 20; i++) mass[i] = GetRandomValue(-100, 100);
	int *vall = mass;
	for (int i = 0; i < 20; i++)
	{
		cout << *(vall + i) << " ";
	}
	cout << endl;
	int *maxx = mass;
	for (int i = 0; i < 20; i++)
	{
		if (*maxx < *(mass + i)) maxx = mass + i;
	}
	cout << (maxx - mass) << ": " << *maxx << endl;
	cout << endl;

	cout << "Задание №4" << endl;
	/*Пусть задан некоторый символьный массив, проинициализированный строковым литералом.
	Например
	Пользователь вводит с клавиатуры один символ.
	Необходимо вывести позицию, на которой введенный пользователем символ встретился первый раз.
	Если введенного символа в строке нет вывести - 1.
	Тестовые данные			Ожидаемый результат
	d				4
	z				26
	!               -1 */
	const char dataa[] = "abcdefghijklmnopqrstuvwxyz";
	const char *curr = dataa;
	char x;
	int answ = -1;
	cin >> x;
	while (*curr != '\0')
	{
		if (x == *curr)
		{
			answ = (curr - dataa) + 1;
			break;
		}
		curr++;
	}
	cout << answ << endl;
	cout << endl;

	cout << "Задание №5" << endl;
	/*Написать программу, которая сравнивает две строки, которые вводит пользователь.
	Сравнение реализовать посимвольно.
	Если введенные строки равны, вывести 1, если строки не равны вывести 0.
	Строки могут быть разных размеров.Размер введенной строки не может превышать 256 символов.
	Строки, введенные пользователем можно получить следующим образом :
	#include <iostream>
	using namespace std;
	int main()
	{
		char line[256];
		cin.getline(line, 256);
	}*/
	bool eq = false;
	char buffer1[MAX_INPUT_SIZE];
	char buffer2[MAX_INPUT_SIZE];
	cin.getline(buffer1, MAX_INPUT_SIZE);
	cin.getline(buffer2, MAX_INPUT_SIZE);
	char * cur1 = buffer1;
	char * cur2 = buffer2;
	while ((*cur1 != '\0') || (*cur2 != '\0'))
	{
		if (*cur1 == *cur2)
		{
			eq = true;
		}
		else
		{
			eq = false;
		}
		cur1++;
		cur2++;
	}
	if (eq)
	{
		cout << 1;
	}
	else
	{
		cout << 0;
	}
}