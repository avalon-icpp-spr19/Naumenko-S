#include <iostream>
#include <limits>
#include "Extention.hpp"

using namespace std;
using namespace ext;

int main() {
	setlocale(LC_ALL, "rus");
	cout << "Задание 1" << endl;
	//Объявите массив для хранения 10-ти целочисленных элементов
	int mas1[10];
	//Объявите константный массив для хранения 20-ти вещественных элементов
	float mas2[20];
	//Объявите массив для хранения 2-х символьных элементов
	char mas3[2];
	//Пусть есть массив объявленный следующим образом:
	int data[6] = { 2, 4, 8, 16, 32, 64 };
	/*Какой размер имеет данный массив? -- 6
	Данные какого типа он хранит -- integer, целочисленные
	Чему равен элемент массива с индексом 0? -- 2
	Чему равен элемент массива с индексом 3? -- 16
	Какой индекс у элемента 8? -- 2
	Какой индекс у элемента 32? -- 4*/
	//Присвойте первому элементу массива значение 1.
	data[0] = 1;
	//Утройте значение последнего элемента в массиве.
	data[5] *= 3;
	//Выведите элементы массива на экран через пробел.
	for (int i = 0; i < 6; ++i) cout << data[i] << " ";
	cout << endl;
	//Объявите массив для хранения 5-ти элеменов любого типа и проинизиализируете его с помощью списка инициализации
	int arrr[5] = { 1, 2, 3, 4, 5 };
	//Выведите объявленный массив на экран.
	for (int i = 0; i < 5; ++i) cout << arrr[i] << " ";
	cout << endl;
	//Можно ли не указывать размер массива при его создании? -- можно
	//Если можно, то продемострируйте это.
	int arrrr[] = { 16, 15, 46, 45, 2, 32 };
	//Пусть массив объявили следующим образом:
	int data2[5] = { 1, 2 };
	//Каков размер данного массива? -- 5
	//Чему равен элемент с индексов 1? -- 2
	//Чему равен элемент с индексом 2? -- 0
	//Проверьте ответы с помощью дебагера.
	//Выведите все элементы массива на экран.
	for (int i = 0; i < 5; ++i) cout << data2[i] << " ";
	cout << endl;
	//Пусть массив объявлен следующим образом:
	const char alpha[3] = { 'a', 'b', 'c' };
	//Каков размер данного массива? -- 3
	//Чему равен элемент с индексов 0? -- 'a'
	//Чему равен индекс у элемента 'c' -- 2
	//Допустимы ли следующие выражения:
	//alpha[0]; -- допустимо
	//alpha[3]; -- недопустимо
	//alpha[1] = 'd'; -- недопустимо
	//alpha[1] = 'b'; -- недопустимо
	//Выведите все элементы массива на экран
	for (int i = 0; i < 3; ++i) cout << alpha[i] << " ";
	cout << endl;
	cout << endl;
	cout << "Задание 2" << endl;
	/*Объявите массив для хранения переменных типа int размером 20;
	Запишите в объявленный массив первые 20 натуральных чисел в порядке возрастания
	Выведите все элементы массива на экран*/
	int arr[20];
	for (int i = 0; i < 20; ++i) arr[i] = i + 1;
	for (int i = 0; i < 20; ++i) cout << arr[i] << " ";
	cout << endl;
	cout << endl;
	/*Запишите в этот же массив первые 20 четных чисел в порядке возрастания
	Выведите все элементы массива на экран*/
	for (int i = 0; i < 20; ++i) arr[i] = (i + 1) * 2;
	for (int i = 0; i < 20; ++i) cout << arr[i] << " ";
	cout << endl;
	cout << endl;
	/*Запишите в этот же массив первые 20 степеней двойки (2^0, 2^1, ... , 2^19). Функцию pow не использовать
	Выведите все элементы массива на экран по 5 элементов в одной строке*/
	for (int i = 1; i < 20; ++i)
	{
		arr[0] = 1;
		arr[i] = arr[i - 1] * 2;
	}
	for (int i = 0; i < 20; ++i)
	{
		cout << arr[i] << " ";
		if ((i + 1) % 5 == 0) cout << endl;
	}
	cout << endl;
	/*Занулите в предыдущем массивы все элементы с нечетным индексов (i = 1, 3, ..., 19);
	Выведите все элементы массива на экран по 5 элементов в одной строке*/
	for (int i = 1; i < 20; ++i)
	{
		if (i % 2 == 1) arr[i] = 0;
	}
	for (int i = 0; i < 20; ++i)
	{
		cout << arr[i] << " ";
		if ((i + 1) % 5 == 0) cout << endl;
	}
	cout << endl;

	cout << "Задание 3" << endl;
	/*При выполнении дальнейших заданий для заполнения массива случайными числами использовать функцию ext::GetRandomValue из Extention.hpp
	Например:
	int data[10];
	for(int i = 0; i < 10; ++i)
	{
	data[i] = ext::GetRandomValue(0, 100, true);
	}
	После выполнения данного кода массив data будет содержать 10 чисел в диапазоне от 0 до 100.*/
	//Сгенерируйте массив из 10 элементов в диапазоне от -10 до 10.
	int mass[10];
	for (int i = 0; i < 10; ++i) mass[i] = GetRandomValue(-10, 10);
	//Выведите его на экран
	for (int i = 0; i < 10; ++i) cout << mass[i] << " ";
	//Найдите наибольший элемент в массиве.
	//Выведите на экран значение этого элемента и его индекс
	//(если максимальных элементов несколько вывести индекс любого).
	int maxx = numeric_limits<int>::min(), maxi = 0;
	for (int i = 0; i < 10; ++i)
	{
		if (maxx < (mass[i]))
		{
			maxx = mass[i]; maxi = i;
		}
	}
	cout << endl;
	cout << "Максимальный элемент: " << maxx << endl;
	cout << "Индекс: " << maxi << endl;
	//Сгенерируйте массив из 100 элементов в диапазоне от -100 до 100.
	//Посчитайте и выведите на экран
	//Сумму всех элементов этого массива.
	//Количество элементов меньше 0, количество элементов равных 0, количество элементов больше 0
	int mass1[100];
	int summa = 0, less = 0, more = 0, eq = 0;
	for (int i = 0; i < 100; ++i) mass1[i] = GetRandomValue(-100, 100);
	for (int i = 0; i < 100; ++i) cout << mass1[i] << " ";
	for (int i = 0; i < 100; ++i)
	{
		if (mass1[i] < 0) less += 1;
		if (mass1[i] > 0) more += 1;
		if (mass1[i] == 0) eq += 1;
	}
	cout << endl;
	cout << "Элементов больше нуля: " << more << endl;
	cout << "Элементов меньше нуля: " << less << endl;
	cout << "Элементов равных нулю: " << eq << endl;
	cout << endl;
	//Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
	//Вывести на экран
	//Элементы в записи которых встречается цифра 2
	//Элементы в записи которых не встречаются нечетные цифры
	//Сложите поэлементно массивы из двух предыдущих пунктов, записав результаты сложения в новый массив
	//Выведите на экран получившийся массив по 10 элементов в строке.
	int mass2[100];
	int two[100], nech[100];
	int summma[100];
	int k = 0;
	bool usl = false, usl2 = false;
	cout << "Массив: " << endl;
	for (int i = 0; i < 100; ++i) mass2[i] = GetRandomValue(1, 100);
	for (int i = 0; i < 100; ++i) cout << mass2[i] << " ";	
	for (int i = 0; i < 100; ++i)
	{
		usl = (mass2[i] % 10 == 2) || (mass2[i] / 10 == 2) || (mass2[i] % 100 / 10 == 2);
		//if (usl) cout << mass2[i] << " ";
		if (usl)
		{
			two[i] = mass2[i];
		}
		else
		{
			two[i] = 0;
		}
	}
	for (int i = 0; i < 100; ++i)
	{
		usl2 = ((mass2[i] % 10) % 2 == 1) || ((mass2[i] / 10) % 2 == 1)
			|| ((mass2[i] % 100 / 10) % 2 == 1);
		//if (usl2) cout << mass2[i] << " ";
		if (usl2)
		{
			nech[i] = mass2[i];
		}
		else
		{
			nech[i] = 0;
		}
	}
	cout << endl;
	cout << "Элементы массива, в которых есть цифра 2: " << endl;
	for (int i = 0; i < 100; ++i)
	{
		if(two[i] != 0) cout << two[i] << " ";
	}
	cout << endl;
	cout << "Элементы массива, в которых есть нечетная цифра: " << endl;
	for (int i = 0; i < 100; ++i)
	{
		if (nech[i] != 0) cout << nech[i] << " ";
	}
	cout << endl;
	cout << "Сумма массивов: " << endl;
	for (int i = 0; i < 100; ++i) summma[i] = nech[i] + two[i];
	for (int i = 0; i < 100; ++i)
	{
		cout << summma[i] << " ";
		if ((i + 1) % 10 == 0) cout << endl;
	}
	cout << endl;
	//Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
	//Попросите пользователя ввести число из этого же диапазона.
	//Осуществите поиск элемента в массиве.
	//Если число есть в массиве выведите его индекс, если числа нет выведите -1.
	//Посчитайте и выведите на экран количество элементов больших, чем введенное пользователем число.
	cout << endl;
	cout << endl;
	cout << "Задание 4" << endl;
	/*Сгенерируйте массив типа char из 100 элементов в диапазоне от a до z.
	Подсказка: функцию генерации рандомного элемента можно вызвать следующим образом:
	GetRandomValue('a','z');
	Выведите получившейся массив на экран в виде одной строки.
	Выведите на экран как часто каждая буква встречается в сгенерированном массиве.
	Выведите на экран вертикальную гистограмму рассчитанной частоты символов.
	Пример: "aabbdddz" для такой строки получится следующая гистограмма:
	|**
	|**
	|
	|***
	|
	|
	...
	|
	|
	|*
	На основании произведенных расчетов замените числовое представление на гистограмму, составленную из символов '*'
	*/
	const int size = 100;
	char abc[size];
	for (int i = 0; i < size; ++i) abc[i] = GetRandomValue('a', 'z');
	for (int i = 0; i < size; ++i) cout << abc[i];
	cout << endl;
	char alph[26] = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
	'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };
	for (int i = 0; i < 26; ++i)
	{
		cout << alph[i] << " | ";
		for (int j = 0; j < size; ++j)
		{
			if (abc[j] == alph[i]) cout << "*";
		}
		cout << endl;
	}
	cout << endl;
	cout << "Задание 5" << endl;
	/*Пусть есть двумерный массив объявленный следующим образом:/*/
	int data3[3][2] = { {2, 4}, {8, 16}, {32, 64} };
	/*Чему равно количество строк в данном массиве? -- 3
	Чему равно количество элементов в каждой строке? -- 2
	Какой размер имеет данный массив? -- 6
	Данные какого типа он хранит? -- целочисленные, integer
	Как обратиться к элементу со значением 8? -- data3[1][0]
	Как обратиться к элементу со значением 64? -- data3[2][1]*/
	//Присвойте первому элементу массива значение 1.
	data3[0][0] = 1;
	//Удвойте значение последнего элемента в массиве.
	data3[2][1] *= 2;
	//Объявите двумерный массив размером 4х2 любого типа и проинизиализируете его с помощью списка инициализации
	int masssiv[4][2] = { {12, 5}, {84, 7}, {4, 5}, {1, 18} };
	//Можно ли не указывать размер двумерного массива при его создании? нет
	//Если можно, то продемострируйте это.
	//Пусть массив объявили следующим образом:
	int data4[][4] = { {1, 2}, {3,4,5} };
	//Каков размер данного массива? -- 8
	//Чему равен элемент data[0][0]? -- 1
	//Чему равен элемент data[1][2]? -- 5
	//Проверьте ответы с помощью дебагера.
	//Увеличьте в два раза каждый элемент в данном массиве.
	for (int i = 0; i < 2; ++i)
	{
		for (int j = 0; j < 4; ++j) data4[i][j] *= 2;		
	}
	//Выведите все элементы массива на экран.
	//Использовать циклы for
	for (int i = 0; i < 2; ++i)
	{
		for (int j = 0; j < 4; ++j) cout << data4[i][j] << " ";
		cout << endl;
	}

	cout << endl;
	cout << "Задание 6" << endl;
/*	Сгенерируйте двумерный массив размером 10x10.
	Заполните его случайными значениями от 0 до 100
	Найдите и выведите на экран:
	Сгенерированный массив
	Сумму всех элементов массива
	Количество всех четных элементов.
	Максимальный и минимальный элементы массива вместе с их индексами
	*/
	int dvmas[10][10];
	for (int i = 0; i < 10; ++i)
	{
		for (int j = 0; j < 10; ++j) dvmas[i][j] = GetRandomValue(0, 100);
	}
	cout << "Массив:" << endl;
	for (int i = 0; i < 10; ++i)
	{
		for (int j = 0; j < 10; ++j) cout << dvmas[i][j] << " ";
		cout << endl;
	}
	cout << endl;
	int summ = 0;
	int chet = 0;
	int min = numeric_limits<int>::max();
	int max = numeric_limits<int>::min();
	int minind = 0, maxind = 0;
	int minindj = 0, maxindj = 0;
	for (int i = 0; i < 10; ++i)
	{
		for (int j = 0; j < 10; ++j)
		{
			summ += dvmas[i][j];
			if (dvmas[i][j] % 2 == 0) chet += 1;
			if (min > dvmas[i][j])
			{
				min = dvmas[i][j]; minind = i; minindj = j;
			}
			if (max < dvmas[i][j])
			{
				max = dvmas[i][j]; maxind = i; maxindj = j;
			}
		}
	}
	cout << "Сумма всех элементов: " << summ << endl;
	cout << "Четных элементов: " << chet << endl;
	cout << "Минимальный элемент: " << minind << "," << minindj << " - " << min << endl;
	cout << "Максимальный элемент: " << maxind << "," << maxindj << " - " << max << endl;
}