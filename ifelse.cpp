#include <iostream>;

using namespace std;

int main()
{
	setlocale(LC_ALL, "rus");
	/* Задание 1
	Даны три натуральных числа A, B, C. Определите, существует ли треугольник с такими сторонами.
	Если треугольник существует, выведите строку Да, иначе выведите строку Нет.
	Треугольник — это три точки, не лежащие на одной прямой.
	Тестовые данные				Ожидаемый результат
	1 1 1						Да
	1 2 4						Нет
	12 7 5						Нет
	7 10 3						Нет
	4 5 8						Да
	*/
	/*int A, B, C, max, AB;
	cout << "A = ";
	cin >> A;
	cout << "B = ";
	cin >> B;
	cout << "C = ";
	cin >> C;
	if (A > B && A > C)
	{
		max = A;
		AB = B + C;
	}
	else
	{
		if (B > A && B > C)
		{
			max = B;
			AB = A + C;
		}
		else
		{
			max = C;
			AB = A + B;
		}
	}
	bool more = (max - AB) > 0;
	if (more)
	{
		cout << "Да" << endl;
	}
	else
	{
		cout << "Нет" << endl;
	}*/

	/* Задание 2
	Напишите код, правильно склоняющий существительное «рублей» следующее за указанным числительным.
	Например, для 10, следует напечатать «рублей», для 1 — «рубль», для 2 — «рубля».
	Использовать конструкцию switch.
	Тестовые данные			Ожидаемый результат
	1					рубль
	2					рубля
	10					рублей
	101					рубль
	1255					рублей
	*/

	int rub;
	cout << "rub = ";
	cin >> rub;
	switch (rub % 10)	
	{
	case 0:
	case 11:
	case 12:
	case 13:
	case 14:
		cout << rub << " рублей" << endl;
		break;
	case 1:
		cout << rub << " рубль" << endl;
		break;
	case 2:
	case 3:
	case 4:
		cout << rub << " рубля" << endl;
		break;
	default:
		cout << rub << " рублей" << endl;
		break;
	}


	/* Задание 3
	В воскресенье Вася пошел в кружок робототехники и увидел там такой код управления боевым роботом:
	// исходные данные, вводятся с клавиатуры.
	// true это 1, false это 0
	*/	
	//Упростите код Васи, удалив избыточные условные операторы.
	//Тестовые данные		Ожидаемый результат
	//false false 10
	//false true 60
	//true false 10			Fire
	//true true 10
	//true true 60			Fire
	//bool enemyInFront;
	//bool isBoss;
	//int robotHealth;

	//// Код Васи
	//bool shouldFire = true;
	//if (enemyInFront == true)
	//{
	//if (isBoss == true)
	//{
	//if (robotHealth < 50) shouldFire = false;
	//if (robotHealth > 100) shouldFire = true;
	//}
	//}
	//else
	//{
	//shouldFire = false;
	//}

	//if(shouldFire)
	//{
	//cout << "Fire" << endl;
	//}



	/* Задание 4
	Вы с Васей и Петей решили выбрать самые лучшие фотографии котиков в интернете.
	Для этого каждую фотографию каждый из вас оценил по стобалльной шкале.
	Естественно, тут же встал вопрос о том, как из трех оценок получить одну финальную.
	Вы опасаетесь, что каждый из вас сильно завысит оценку фотографиям своего котика.
	Поэтому было решено в качестве финальной оценки брать не среднее арифметическое, а медиану, то есть просто откинуть максимальную и минимальную оценки.
	Вася начал писать код выбора средней оценки из трех, но запутался в if - ах, и поэтому перепоручил эту задачу вам.
	Попробуйте не просто решить задачу, но и минимизировать количество проверок и максимально упростить условия проверок.
	Тестовые данные		Ожидаемый результат
	1 2 3				2
	5 5 5				5
	2 2 9				2
	1 5 5				5
	4 5 6				4
	*/
	/*int Me, V, P;
	cout << "Ваш балл: ";
	cin >> Me;
	cout << "Петя: ";
	cin >> P;
	cout << "Вася: ";
	cin >> V;
	if ((Me >= P && Me >= V && V <= P) || (Me <= P && Me <= V && V >= P))
	{
		cout << P;
	}
	else
	{ 
		if ((P >= Me && P >= V && Me <= V) || (P <= Me && P <= V && Me >= V))
		{
			cout << V;
		}
		cout << Me;
	}*/

	/* Задание 5
	Написать логику, которая проверяет возможность существования даты по введенным пользователем данных.
	Пользователь вводит данные в формате день, месяц, год.

	Тестовые данные				Ожидаемый результат
	1 1 1992					true
	30 6 1992					true
	31 7 1992					true
	31 9 1994					false
	32 1 1992					false
	1 13 1992					false
	29 2 1993					false
	29 2 2004					true
	29 2 1900					false
	29 2 2000					true
	*/



	/* Задание 6
	Шахматный ферзь ходит по диагонали, горизонтали или вертикали.
	Даны две различные клетки шахматной доски, Написать логику, которая определяет
	может ли ферзь попасть с первой клетки на вторую одним ходом.
	Клетки нумеруются с 1. Пользователь вводит координаты начальной и конечной клетки в формате x1x2.
	x1 - номер клетки по горизонтали, x2 - номер клетки по вертикали

	Тестовые данные				Ожидаемый результат
	54 14						true
	11 88						true
	36 61						false
	18 71						false
	23 67						true
	*/
	/*int koor1, koor2, x11, x12, x21, x22;
	cout << "начальные координаты: ";
	cin >> koor1;
	cout << "Конечные координаты: ";
	cin >> koor2;
	x11 = koor1 / 10; x12 = koor1 % 10;
	x21 = koor2 / 10; x22 = koor2 % 10;
	bool uslovie1 = ((abs(x11 - x21)) == (abs(x12 - x22)));
	if(uslovie1 || ((x11 == x21) || (x22 == x12)))
	{
		cout << "true";
	}
	else
	{
		cout << "false";
	}*/
}